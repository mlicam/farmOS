<?php

/**
 * @file
 * Farm plan consideration module.
 */

/**
 * Get available consideration types provided by modules.
 *
 * @return array
 *   Returns an array of consideration type information.
 */
function farm_plan_consideration_types() {

  // Ask modules for consideration types. Use static caching.
  $consideration_types = &drupal_static(__FUNCTION__);
  if (!isset($consideration_types)) {
    $consideration_types = module_invoke_all('farm_plan_consideration_types');
  }

  // Return consideration types.
  return $consideration_types;
}

/**
 * Implements hook_farm_plan_consideration_types().
 */
function farm_plan_farm_plan_consideration_types() {

  // Provide two basic consideration types: "Management concern" and "Urgent".
  return array(
    'concern' => array(
      'label' => t('Management concern'),
      'color' => 'purple',
    ),
    'urgent' => array(
      'label' => t('Urgent'),
      'color' => 'red',
    ),
  );
}

/**
 * Create a new consideration.
 *
 * @param string $type
 *   The consideration type machine name.
 * @param string $name
 *   The consideration name.
 * @param int $plan_id
 *   The ID of the plan this consideration is linked to (optional).
 * @param int $start
 *   The start timestamp of the consideration.
 * @param int $end
 *   The end timestamp of the consideration.
 *
 * @return object
 *   Returns an empty consideration object.
 */
function farm_plan_consideration_create($type = 'concern', $name = '', $plan_id = NULL, $start = 0, $end = 0) {
  $consideration = new stdClass();
  $consideration->id = NULL;
  $consideration->type = $type;
  $consideration->name = $name;
  $consideration->plan_id = $plan_id;
  $consideration->start = $start;
  $consideration->end = $end;
  $consideration->entities = array();
  return $consideration;
}

/**
 * Save a consideration to the database.
 *
 * @param object $consideration
 *   The consideration object.
 */
function farm_plan_consideration_save(&$consideration) {

  // Build the primary keys parameter for drupal_write_record() depending on
  // whether or not the consideration has an ID (insert vs update).
  $keys = array();
  if (!empty($consideration->id)) {
    $keys[] = 'id';
  }

  // Save the consideration to the database.
  drupal_write_record('farm_plan_consideration', $consideration, $keys);

  // Save all entity links to the consideration.
  if (!empty($consideration->id)) {

    // First delete all existing links.
    db_query('DELETE FROM {farm_plan_consideration_entity} WHERE consideration_id = :id', array(':id' => $consideration->id));

    // If there are links to save, iterate through them.
    if (!empty($consideration->entities)) {
      foreach ($consideration->entities as $entity_type => $entity_ids) {
        if (!empty($entity_ids)) {
          foreach ($entity_ids as $entity_id) {

            // Save the entity+consideration link.
            $record = array(
              'consideration_id' => $consideration->id,
              'entity_type' => $entity_type,
              'entity_id' => $entity_id,
            );
            drupal_write_record('farm_plan_consideration_entity', $record);
          }
        }
      }
    }
  }
}

/**
 * Load a consideration from the database.
 *
 * @param int $id
 *   The consideration ID.
 *
 * @return object|bool
 *   Returns the consideration object, or FALSE if one doesn't exist.
 */
function farm_plan_consideration_load($id) {

  // Load the consideration record from the database.
  $consideration =  db_query('SELECT * FROM {farm_plan_consideration} WHERE id = :id', array(':id' => $id))->fetch();

  // If a consideration couldn't be loaded, bail.
  if (empty($consideration)) {
    return FALSE;
  }

  // Load entity associations with this consideration.
  $result = db_query('SELECT * FROM {farm_plan_consideration_entity} WHERE consideration_id = :id', array(':id' => $id));
  foreach ($result as $record) {
    $consideration->entities[$record->entity_type][] = $record->entity_id;
  }

  // Return the consideration.
  return $consideration;
}

/**
 * Delete a consideration from the database.
 *
 * @param int $id
 *   The consideration ID.
 */
function farm_plan_consideration_delete($id) {

  // If the ID is empty, bail.
  if (empty($id)) {
    return;
  }

  // Delete the consideration.
  db_query('DELETE FROM {farm_plan_consideration} WHERE id = :id', array(':id' => $id));

  // Delete any entity associations to that consideration.
  db_query('DELETE FROM {farm_plan_consideration_entity} WHERE consideration_id = :id', array(':id' => $id));
}
